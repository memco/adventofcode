import math

TEST_1_DATA = """
..##.......
#...#...#..
.#....#..#.
..#.#...#.#
.#...##..#.
..#.##.....
.#.#.#....#
.#........#
#.##...#...
#...##....#
.#..#...#.#
"""

INPUT_DATA = """
....#...##.#.........#....#....
#.......#...#...#.#............
#..#..#.#.##....#.#........#...
........##...................#.
........#...##...#.#.###.......
##............#...#.....#.##...
...........#....###...#.....#..
.......#......#..##..#.....#...
..#.#..#....#.........#...#..#.
.........##......#.....##..##..
........#.....#....#..##......#
..#..#.......#..............#..
.....#.#.......................
.#.#....#.........#............
.......#.....#.###.............
......##......#...........#..#.
.#...............##...#........
.....#..##........###.........#
#...........#..#............#..
.........#....#..#.#......#....
.......#.........#..##.........
.##.....#..................#...
....#............#.#....#.....#
..#....#...##....#...#.#...#...
..........#................#.#.
#...#.#.#.####..#.#..........#.
..#...#.##......#...........#..
..#.....#...#.......#......#..#
..............#.......#........
.#..#..........#.....#...#..#.#
#........#...#......#.......#..
#..................#...........
..#...#........#...#..#........
..............#.....#.....#..#.
#.#.......#..............##.##.
....#.#.....##....#...........#
......#....#...#..#.......#....
....#..#.#.....#..##.....#....#
...........#.......#.#.#.......
#.......#..##........#..#......
.........#.##..#..............#
...........#............###.#..
..#.....#.....##...#.........#.
....##............##........#..
.....###..........#......##....
#...##..#..#..........#........
....#.....#.......#..#.#...##..
.#....#........#.#.........#.#.
##...#.#.....#......#..........
.....##.....#....#.....###.#..#
..............#..###..#...#..#.
....#...#....#.............#.#.
.#.........#.....#........#.##.
....#.........#..........#.....
.......#........#.#.#..........
#........##....#.........#.....
..##..........#....#.#...#....#
#...#.#......#..##..........#.#
.....#..#...#..#...............
#...#..............#...........
.#...#....#..##.....#....#.#...
.#...#.......#...#..#.##....#..
#....#........#....#...#.......
#..#......#.....#.....#..##....
......#.#....##....##..#...#...
..#....#.#.###..............#..
.#.##.......#.#.#..#...#..#....
..#..........#.#....#..#.#....#
..........#...#...#..........#.
..........#.....#.#..#..#....##
.#.#...##...#...........####...
........##..#.#..........#.##.#
#......###...........#...#.....
..#.#....##.........##....#....
#....#.##..##..#..#.....#.....#
.##.....##....##....#.......#..
#...#.....##....#..........#...
............#.#.##....#....#...
....#............#.....#......#
....................#..........
..#....................#..#....
....#.....#........#..##...#...
#.....#.#....................##
.#....#.#.#...#..........#....#
....#...#......#...#.....##...#
.....#.........................
.......#..#.#...#...#...#.....#
...#......#.##.#...#..#...##.#.
...........................#..#
..#.#.....#........##..........
....#...##........#.#.#..#...##
..##.....#..###.........##.##..
.#..#.....#...#.............#..
#..............##...#....##....
.##......#.#............#......
.............##...#.#.......#..
.........#..#..#...............
........##......#....##........
...#.........#.#.#.............
#..........#......#......#..#..
.............##.#.#..#.#.#...#.
.....#.........#...............
..##.#..#.....##..#........#.#.
.#..........#.#.......#......##
.#........................#....
#....#....#...#..#......#......
........#.......#......#.....#.
.....#....##..#...###...#....#.
....#.........#....#......#....
.............#...#....#.......#
.....#.........#..#.#..........
.........#..#........#.#.#.....
......#.##......#....#.#.##.#..
.#...#.#...#...#.#......#....##
.#................#......#.....
#.#.#...............#..........
.....#.#.......#...#........#..
#...#.#.#.##..#...........#..#.
.............###.........#....#
.#.....#.......##....##.......#
....#...#.......#.##.....#.....
...........##.........#...#....
..............#.#..#.....#..#..
#.#...#..#.#.........#......#.#
#.##.....##....#........#.#.#.#
##.#.###.........##.......#..#.
#.....#.....................#..
.........##........#...........
.###........##....#...#........
....#.#........##...........#..
..........#.....#..........#..#
......#..............#......#..
.....#...#......#...#...#......
..........#.#..#....#...#..###.
#..##........#................#
..#............................
.....#.........#.#.............
........#...#.....#...##......#
..#........#................#..
......#....#..#......#.........
...........##....#..#.#........
.....#.............###.........
#............#......#..#.......
..#..#.................#..#..##
.......#......#.....#........#.
....................#..#.##...#
.#..##...............##...#....
...#...#....#........#.........
.....##...#.....###............
.###.........#........#.....##.
.............#...#.............
...#.#...............#..##..#.#
...#...............#..#.....#..
....#.#..................#...#.
..........#...........#.#...###
#...#......#................#..
...#.#.......#...#......#.##...
......#..........#.............
##.......#.##.#...........#....
......#...#.#.....#............
.#.....#.....#.....#.........#.
..................#............
.#.#.#.....#......#.##.........
.......#..##.##......#..#....#.
...#.#.#......#...#........#...
..#............#......#.......#
..#......#........#.........#..
..#..#.#.#.....#.............#.
..#.#..##......#...#...##......
.##...#....##.#.#...........#..
..............#..#...#....#....
.......#.#........#............
.....##..###........#..........
......................#........
..##....#....#.................
.##.#.###.#........#.##..#...#.
##................#...........#
....#..##.....##...............
.#.....#..#............#.....#.
#.........#..............#.....
...##.#......#...#.............
................#..............
...#.....#....##...#..#....#...
..............##..#...#.##..#..
......................#..#....#
.......#....#..#.##.........#.#
#...#........##.......#........
...##...............#.....#....
.##...##...#...................
.........##.#...#.........#....
............#............#..#..
.............................#.
....#.#....#...................
......#......#...#..##.........
#........#.#.#.#.#......#....#.
.#.........#.#...#......#..#.#.
..............#....##.........#
.#.......#..#....#.#.#....#....
...###.#.#..#...#....#....#....
#........#....................#
......#...##.###..#..##...#....
.....#........#.......#........
#..#...........#.#.............
....##.#...#..##............##.
#.#..##..#...#...#.....#.......
..#.............#.##..#...#.##.
.#.....##.#..#...#...........#.
....#...#....................##
....##......#.###......#......#
...#...#.........#..#.##....#..
#......#..#....###.........#...
#...........##.............#.#.
#..............##....#......#..
.........#...#.#...#...#.......
....#....#............#.......#
........#...#....#......##.....
..........#.#..#.........#.....
#........#.##....##......#.....
...#.......#...................
###...#...#..#.##....#.....#...
........##..........#.##..#....
.....#......#..#.....#.....#.#.
...#..#..##..###.....##.#......
#..#......##...#............#..
#............#....#..#.........
#........#.......#......#..##.#
...#.#.........#.#.............
#..............#..............#
#.#......#..........##.........
#..##...........#..##...#......
.....#.#.....#......#.....#.#.#
.#.##...#...##...........#....#
#.............#........#.......
..##.............#...#.........
....#.#......###....#..........
...#..#.....#..##.#....#...#.#.
.............##................
#.#............#........#..#.#.
.#......#.....#...........#....
...#.........#...........#.##..
.....#...#.....#..#..........#.
........#.#...............#.#..
.......#..#..#.....#.......##..
.#...#...#..#...##...#.........
..........##....#..#.##..#.....
....#.................#...#....
.........#...#......#....#....#
.........#..#...#.##........##.
#.#....##.......#.#............
##.......##..................#.
......#...#......##............
##.#...#.#...........#..#......
.........#.........#..#.#...#..
.#...#.......#.#...###.........
................#.#.....#......
..#...#.....#........#.........
.........##.###.#.#.....#...#..
#..#..........#....#.#...#...##
##.#.#....#..##.............#.#
.###....#..#...............##..
............#......#.#.#....#..
........#...#..#...#...........
##.........#................#..
...###...#.#..#...#..........##
...#......#......##........#...
.......#............#..........
.....#.....##....#.....###.....
.#...#...#.....#..#..#....#..#.
#.#........#..#.......##...#.##
.....#.....##..#.##........#..#
.....#...#...........#.........
..#....#.#...#..#....##...#...#
...........#...##.........#....
..#....#....##........#.####...
#.............#.#.............#
...................#.....#.#..#
.#....#.#.............#.#......
#...........#............#.#...
..#.........#.#....#.......##..
#....####......#...#......#....
....##....#...................#
....#.##....#.............#....
.........##........#.....#..#..
............#...#..............
............#..##....#.....##.#
............#.....#......#.....
........#..#........##.#.......
...#.#........#..............#.
............#.........#..#.#...
................#.............#
..##..........##......#.#......
..#..#.##....#.........#...#...
...........##...#.#.#..........
.#.#.......#.#...#.........#...
.........#..#........#..#.#....
..........##..#.##....#....#...
....#...............#.......#..
##..........##.................
....#.#.#.....#..........##.#..
..............#.##..........##.
##...............#...#..#......
..#..#..........#......#.......
#...#..##.#.#..................
....#....##......##.#...#....##
.#...#.#....##.............#..#
................#......###.....
..#..#.............#.#.......#.
..#..................#.......#.
.....#.......#....#.##...#.##..
.....##.......#......#..#......
#..#.......#........#..........
..#...#..#....#.........#......
#..#..#......##..#.##....####..
......##.#.....#..#.......#....
.##...#.....#..#...#.#.........
#.....#........###....#...#..#.
.#....#.#..#......#............
.........#..#..#.....#........#
..#.......#..........#..#......
......#.......##.#....#.#.#....
.#............#.....#.......#..
...#..#...............#........
.....#.........................
"""


def parse_input(input_data: str):
    return [line.strip() for line in input_data.splitlines() if line.strip()]


def is_tree(grid, x, y):
    return grid[y][x] == "#"


def move_to(grid, start_x, start_y, x, y):
    grid_width = len(grid[0])
    grid_height = len(grid)
    unbounded_x = start_x + x
    new_x = unbounded_x if unbounded_x < grid_width else (unbounded_x % grid_width)
    return new_x, start_y + y


def print_char_at_pos(grid, char_x, char_y, current_x, current_y):
    if char_x == current_x and char_y == current_y:
        on_tree = is_tree(grid, current_x, current_y)
        return "X" if on_tree else "O"
    return grid[char_y][char_x]


def print_grid(grid: list, current_x, current_y):
    print_grid = grid.copy()
    new_line = "".join(
        [
            print_char_at_pos(grid, pos, current_y, current_x, current_y)
            for pos, char in enumerate(grid[current_y])
        ]
    )
    print_grid[current_y] = new_line
    print("\n".join(print_grid))


def descend_slope(grid, start_x, start_y, slope_x, slope_y):
    grid_width = len(grid[0])
    grid_height = len(grid)
    current_pos = start_x, start_y
    hit_trees = 0
    while current_pos[1] < grid_height:
        if current_pos[1] >= grid_height:
            break
        # print_grid(grid, *current_pos)
        print(
            f"now at: {current_pos}: {grid[current_pos[1]][current_pos[0]]} ({is_tree(grid, *current_pos)})"
        )
        hit_tree = int(is_tree(grid, *current_pos))
        hit_trees += hit_tree
        current_pos = move_to(grid, *current_pos, slope_x, slope_y)
    print(f"Done descending hit trees: {hit_trees}")
    return hit_trees


def minmax_slopes(input_data, slopes):
    results = {
        slope: descend_slope(input_data, 0, 0, slope[0], slope[1]) for slope in slopes
    }
    print(math.prod(results.values()))


if __name__ == "__main__":
    print(is_tree(TEST_1_DATA, 0, 0))
    print(is_tree(TEST_1_DATA, 0, 2))
    print(move_to(TEST_1_DATA, 0, 0, 3, 1))
    descend_slope(parse_input(TEST_1_DATA), 0, 0, 3, 1)
    descend_slope(parse_input(INPUT_DATA), 0, 0, 3, 1)
    slopes = [(1, 1), (3, 1), (5, 1), (7, 1), (1, 2)]
    minmax_slopes(parse_input(TEST_1_DATA), slopes)
    minmax_slopes(parse_input(INPUT_DATA), slopes)